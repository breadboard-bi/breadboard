{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww14480\viewh13040\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 /* \
Initial pattern to load an MDW dimension from a stage table using Slowly Changing Dimension (SCD2) logic on Snowflake.\
\
This script builds a sequence, stream, view, and task.  A Snowflake warehouse is also required, as well as the appropriate privileges.\
\
The core logic is based on an article written by John Gontarz, Sales Engineer at Snowflake - https://community.snowflake.com/s/article/Building-a-Type-2-Slowly-Changing-Dimension-in-Snowflake-Using-Streams-and-Tasks-Part-1.  \
\
Modfiications made to work with the existing MDW enterprise dimensional model and to limit which columns trigger SCD2 insert/update versus a regular update..\
*/\
\
create or replace sequence  seq_customer start with 1 increment by 1;\
\
create or replace stream stage_customer_changes on table stage_customer; -- stream nation_table_changes\
\
--generates data to load customer into the dimension_customer table.\
create or replace view customer_change_data as\
-- This first subquery figures out what to do when data is inserted into the stage_customer table\
-- An insert to the stage_customer table results in an INSERT to the dimension_customer table\
select customer_sk, customer_id, customer_setid, customer_name, source_system_sk, \
currency_id, do_not_contact_ind, do_not_email_ind, do_not_mail_ind, do_not_call_ind, customer_type_id, customer_type_desc, customer_status_code, customer_status_name, customer_status_desc, customer_status_date, geo_code, in_city_limit_ind, timezone_name, latitude, longitude, address_line1_desc, address_line2_desc, address_line3_desc, address_line4_desc, city_name, county_name, postal_code, state_province_code, state_province_name, country_code, country_name, email_domain_desc, email_address_desc, phone_country_code, phone_number, phone_extension_number, sold_to_ind, ship_to_ind, bill_to_ind, alt_customer_id, duns_number, parent_duns_number, ult_duns_number, last_name, add_date, first_name, since_date, birth_date, death_date, marital_status_cat, marital_status_date, gender_cat, customer_amt, income_qty, credit_rating_cat, credit_score_qty, phone_region_code, credit_rating_code, credit_rating_name, customer_type_code, customer_type_name, customer_group_code, customer_group_name, customer_group_desc, customer_class_code, customer_class_name, customer_class_desc, \
-- parent_customer_id, parent_customer_name, level_number, \
credit_status_code, credit_status_name, credit_status_desc, credit_status_date, guaranteed_cpc_amt,\
hosted_client_sk, dw_start_date, dw_stop_date, dw_current_ind, 'I' as dml_type\
from (select customer_sk, customer_id, customer_setid, customer_name, source_system_sk, \
currency_id, do_not_contact_ind, do_not_email_ind, do_not_mail_ind, do_not_call_ind, customer_type_id, customer_type_desc, customer_status_code, customer_status_name, customer_status_desc, customer_status_date, geo_code, in_city_limit_ind, timezone_name, latitude, longitude, address_line1_desc, address_line2_desc, address_line3_desc, address_line4_desc, city_name, county_name, postal_code, state_province_code, state_province_name, country_code, country_name, email_domain_desc, email_address_desc, phone_country_code, phone_number, phone_extension_number, sold_to_ind, ship_to_ind, bill_to_ind, alt_customer_id, duns_number, parent_duns_number, ult_duns_number, last_name, add_date, first_name, since_date, birth_date, death_date, marital_status_cat, marital_status_date, gender_cat, customer_amt, income_qty, credit_rating_cat, credit_score_qty, phone_region_code, credit_rating_code, credit_rating_name, customer_type_code, customer_type_name, customer_group_code, customer_group_name, customer_group_desc, customer_class_code, customer_class_name, customer_class_desc, \
-- parent_customer_id, parent_customer_name, level_number, \
credit_status_code, credit_status_name, credit_status_desc, credit_status_date, guaranteed_cpc_amt,\
hosted_client_sk, dw_load_date as dw_start_date,\
lag(dw_load_date) over (partition by customer_id order by dw_load_date desc) as dw_stop_date_raw, \
--Lag accesses dimension versions with the same key without having to join the table to itself.\
--if multiple rows with same key are found, the latest is marked as current, the rest are loaded as not current.\
case when dw_stop_date_raw is null then '9999-12-31'::timestamp_ntz else dw_stop_date_raw end as dw_stop_date,\
--case when dw_stop_date is null then 'Y' else 'N' end as dw_current_ind\
case when dw_stop_date = '9999-12-31'::timestamp_ntz then 'Y' else 'N' end as dw_current_ind\
from (select null as customer_sk, --subsequent merge will insert SEQ_customer.nextval.  This keeps the column count in the union consistent with other subqueries that need the sk.\
customer_id, customer_setid, customer_name, source_system_id as source_system_sk, \
currency_id, do_not_contact_ind, do_not_email_ind, do_not_mail_ind, do_not_call_ind, customer_type_id, customer_type_desc, customer_status_code, customer_status_name, customer_status_desc, customer_status_date, geo_code, in_city_limit_ind, timezone_name, latitude, longitude, address_line1_desc, address_line2_desc, address_line3_desc, address_line4_desc, city_name, county_name, postal_code, state_province_code, state_province_name, country_code, country_name, email_domain_desc, email_address_desc, phone_country_code, phone_number, phone_extension_number, sold_to_ind, ship_to_ind, bill_to_ind, alt_customer_id, duns_number, parent_duns_number, ult_duns_number, last_name, add_date, first_name, since_date, birth_date, death_date, marital_status_cat, marital_status_date, gender_cat, customer_amt, income_qty, credit_rating_cat, credit_score_qty, phone_region_code, credit_rating_code, credit_rating_name, customer_type_code, customer_type_name, customer_group_code, customer_group_name, customer_group_desc, customer_class_code, customer_class_name, customer_class_desc, \
-- parent_customer_id, parent_customer_name, level_number, \
credit_status_code, credit_status_name, credit_status_desc, credit_status_date, guaranteed_cpc_amt,\
hosted_client_sk, dw_load_date\
    from stage_customer_changes --stream on stage_customer\
    where metadata$action = 'INSERT'\
    and metadata$isupdate = 'FALSE'))\
--End INSERT subquery\
union\
-- START SCD2 Update LOGIC\
-- This subquery figures out what to do when SCD2 trigger columns are updated in the stage_customer table\
-- An update to one or more trigger columns in the stage_customer table results in an update AND an insert to the\
-- dimension_customer table\
-- The subquery below generates two records, each with a different dml_type\
select customer_sk, customer_id, customer_setid, customer_name, source_system_sk, \
currency_id, do_not_contact_ind, do_not_email_ind, do_not_mail_ind, do_not_call_ind, customer_type_id, customer_type_desc, customer_status_code, customer_status_name, customer_status_desc, customer_status_date, geo_code, in_city_limit_ind, timezone_name, latitude, longitude, address_line1_desc, address_line2_desc, address_line3_desc, address_line4_desc, city_name, county_name, postal_code, state_province_code, state_province_name, country_code, country_name, email_domain_desc, email_address_desc, phone_country_code, phone_number, phone_extension_number, sold_to_ind, ship_to_ind, bill_to_ind, alt_customer_id, duns_number, parent_duns_number, ult_duns_number, last_name, add_date, first_name, since_date, birth_date, death_date, marital_status_cat, marital_status_date, gender_cat, customer_amt, income_qty, credit_rating_cat, credit_score_qty, phone_region_code, credit_rating_code, credit_rating_name, customer_type_code, customer_type_name, customer_group_code, customer_group_name, customer_group_desc, customer_class_code, customer_class_name, customer_class_desc, \
-- parent_customer_id, parent_customer_name, level_number, \
credit_status_code, credit_status_name, credit_status_desc, credit_status_date, guaranteed_cpc_amt,\
hosted_client_sk, dw_start_date, dw_stop_date, dw_current_ind, dml_type\
from (select customer_sk, customer_id, customer_setid, customer_name, source_system_sk, \
currency_id, do_not_contact_ind, do_not_email_ind, do_not_mail_ind, do_not_call_ind, customer_type_id, customer_type_desc, customer_status_code, customer_status_name, customer_status_desc, customer_status_date, geo_code, in_city_limit_ind, timezone_name, latitude, longitude, address_line1_desc, address_line2_desc, address_line3_desc, address_line4_desc, city_name, county_name, postal_code, state_province_code, state_province_name, country_code, country_name, email_domain_desc, email_address_desc, phone_country_code, phone_number, phone_extension_number, sold_to_ind, ship_to_ind, bill_to_ind, alt_customer_id, duns_number, parent_duns_number, ult_duns_number, last_name, add_date, first_name, since_date, birth_date, death_date, marital_status_cat, marital_status_date, gender_cat, customer_amt, income_qty, credit_rating_cat, credit_score_qty, phone_region_code, credit_rating_code, credit_rating_name, customer_type_code, customer_type_name, customer_group_code, customer_group_name, customer_group_desc, customer_class_code, customer_class_name, customer_class_desc, \
--parent_customer_id, parent_customer_name, level_number, \
credit_status_code, credit_status_name, credit_status_desc, credit_status_date, guaranteed_cpc_amt,\
hosted_client_sk, dw_start_date as dw_start_date,  --was dw_load_date\
    lag(dw_load_date) over (partition by customer_id order by dw_load_date desc) as dw_stop_date_raw,\
    case when dw_stop_date_raw is null then '9999-12-31'::timestamp_ntz else dw_stop_date_raw end as dw_stop_date,\
    case when dw_stop_date_raw is null then 'Y' else 'N' end as dw_current_ind,\
    dml_type\
    from (-- Identify data to insert into dimension_customer table\
        select null as customer_sk, c.customer_id, c.customer_setid, c.customer_name,\
        c.source_system_id as source_system_sk,\
c.currency_id, c.do_not_contact_ind, c.do_not_email_ind, c.do_not_mail_ind, c.do_not_call_ind, c.customer_type_id, c.customer_type_desc, c.customer_status_code, c.customer_status_name, c.customer_status_desc, c.customer_status_date, c.geo_code, c.in_city_limit_ind, c.timezone_name, c.latitude, c.longitude, c.address_line1_desc, c.address_line2_desc, c.address_line3_desc, c.address_line4_desc, c.city_name, c.county_name, c.postal_code, c.state_province_code, c.state_province_name, c.country_code, c.country_name, c.email_domain_desc, c.email_address_desc, c.phone_country_code, c.phone_number, c.phone_extension_number, c.sold_to_ind, c.ship_to_ind, c.bill_to_ind, c.alt_customer_id, c.duns_number, c.parent_duns_number, c.ult_duns_number, c.last_name, c.add_date, c.first_name, c.since_date, c.birth_date, c.death_date, c.marital_status_cat, c.marital_status_date, c.gender_cat, c.customer_amt, c.income_qty, c.credit_rating_cat, c.credit_score_qty, c.phone_region_code, c.credit_rating_code, c.credit_rating_name, c.customer_type_code, c.customer_type_name, c.customer_group_code, c.customer_group_name, c.customer_group_desc, c.customer_class_code, c.customer_class_name, c.customer_class_desc,\
--c.parent_customer_id, c.parent_customer_name, c.level_number, \
c.credit_status_code, c.credit_status_name, c.credit_status_desc, c.credit_status_date, c.guaranteed_cpc_amt,\
        c.hosted_client_sk, \
        c.dw_load_date as dw_start_date, --deliberate otherwise will match and not insert.\
        c.dw_load_date, \
        'I' as dml_type\
        from stage_customer_changes c --stream\
        join dimension_customer d \
        on c.customer_id = d.customer_id \
        -- SCD2 trigger columns identified below are customer_name and customer_desc. Changes to other columns will be\
        -- excluded and handled in the update section.\
        and (d.customer_name <> c.customer_name)\
        where c.metadata$action = 'INSERT'\
        and c.metadata$isupdate = 'TRUE'\
        and d.dw_current_ind = 'Y'\
        union\
        -- Identify data in dimension_customer table that needs to be updated, i.e., given a stop date.\
        select customer_sk, customer_id, customer_setid, null as customer_name, source_system_sk, \
currency_id, do_not_contact_ind, do_not_email_ind, do_not_mail_ind, do_not_call_ind, customer_type_id, customer_type_desc, customer_status_code, customer_status_name, customer_status_desc, customer_status_date, geo_code, in_city_limit_ind, timezone_name, latitude, longitude, address_line1_desc, address_line2_desc, address_line3_desc, address_line4_desc, city_name, county_name, postal_code, state_province_code, state_province_name, country_code, country_name, email_domain_desc, email_address_desc, phone_country_code, phone_number, phone_extension_number, sold_to_ind, ship_to_ind, bill_to_ind, alt_customer_id, duns_number, parent_duns_number, ult_duns_number, last_name, add_date, first_name, since_date, birth_date, death_date, marital_status_cat, marital_status_date, gender_cat, customer_amt, income_qty, credit_rating_cat, credit_score_qty, phone_region_code, credit_rating_code, credit_rating_name, customer_type_code, customer_type_name, customer_group_code, customer_group_name, customer_group_desc, customer_class_code, customer_class_name, customer_class_desc, \
--parent_customer_id, parent_customer_name, level_number, \
credit_status_code, credit_status_name, credit_status_desc, credit_status_date, guaranteed_cpc_amt,\
        null as hosted_client_sk, dw_start_date, dw_load_date,\
        'U' as dml_type\
        from dimension_customer\
        where customer_sk in (select distinct d.customer_sk\
                                from stage_customer_changes c --stream\
                                --ADDED JOIN TO DIM HERE THAT includes triggers are not equal\
                                join dimension_customer d \
                                on c.customer_id = d.customer_id \
                                and c.source_system_id = d.source_system_sk\
                                and (d.customer_name <> c.customer_name)\
                                where c.metadata$action = 'INSERT'\
                                and c.metadata$isupdate = 'TRUE')\
                                and dw_current_ind = 'Y' --??\
                                ))\
-- END SCD2 logic.    \
-- START NON SCD2 UPDATES - changes in stage that do not trigger a new insert in the dim.\
union\
select customer_sk, customer_id, customer_setid, customer_name, source_system_sk, \
currency_id, do_not_contact_ind, do_not_email_ind, do_not_mail_ind, do_not_call_ind, customer_type_id, customer_type_desc, customer_status_code, customer_status_name, customer_status_desc, customer_status_date, geo_code, in_city_limit_ind, timezone_name, latitude, longitude, address_line1_desc, address_line2_desc, address_line3_desc, address_line4_desc, city_name, county_name, postal_code, state_province_code, state_province_name, country_code, country_name, email_domain_desc, email_address_desc, phone_country_code, phone_number, phone_extension_number, sold_to_ind, ship_to_ind, bill_to_ind, alt_customer_id, duns_number, parent_duns_number, ult_duns_number, last_name, add_date, first_name, since_date, birth_date, death_date, marital_status_cat, marital_status_date, gender_cat, customer_amt, income_qty, credit_rating_cat, credit_score_qty, phone_region_code, credit_rating_code, credit_rating_name, customer_type_code, customer_type_name, customer_group_code, customer_group_name, customer_group_desc, customer_class_code, customer_class_name, customer_class_desc, \
--parent_customer_id, parent_customer_name, level_number, \
credit_status_code, credit_status_name, credit_status_desc, credit_status_date, guaranteed_cpc_amt,\
hosted_client_sk, dw_start_date, dw_stop_date, dw_current_ind, dml_type\
from (select customer_sk, customer_id, customer_setid, customer_name, source_system_sk, \
currency_id, do_not_contact_ind, do_not_email_ind, do_not_mail_ind, do_not_call_ind, customer_type_id, customer_type_desc, customer_status_code, customer_status_name, customer_status_desc, customer_status_date, geo_code, in_city_limit_ind, timezone_name, latitude, longitude, address_line1_desc, address_line2_desc, address_line3_desc, address_line4_desc, city_name, county_name, postal_code, state_province_code, state_province_name, country_code, country_name, email_domain_desc, email_address_desc, phone_country_code, phone_number, phone_extension_number, sold_to_ind, ship_to_ind, bill_to_ind, alt_customer_id, duns_number, parent_duns_number, ult_duns_number, last_name, add_date, first_name, since_date, birth_date, death_date, marital_status_cat, marital_status_date, gender_cat, customer_amt, income_qty, credit_rating_cat, credit_score_qty, phone_region_code, credit_rating_code, credit_rating_name, customer_type_code, customer_type_name, customer_group_code, customer_group_name, customer_group_desc, customer_class_code, customer_class_name, customer_class_desc, \
-- parent_customer_id, parent_customer_name, level_number, \
credit_status_code, credit_status_name, credit_status_desc, credit_status_date, guaranteed_cpc_amt,\
hosted_client_sk, \
    dw_start_date as dw_start_date, --was dw_load_date\
    lag(dw_load_date) over (partition by customer_id order by dw_load_date desc) as dw_stop_date_raw,\
    case when dw_stop_date_raw is null then '9999-12-31'::timestamp_ntz else dw_stop_date_raw end as dw_stop_date,\
    case when dw_stop_date_raw is null then 'Y' else 'N' end as dw_current_ind,\
    dml_type\
    from (-- Identify data to insert into dimension_customer table\
        select distinct d.customer_sk,\
        c.customer_id, c.customer_setid, c.customer_name, c.source_system_id as\
        source_system_sk, \
c.currency_id, c.do_not_contact_ind, c.do_not_email_ind, c.do_not_mail_ind, c.do_not_call_ind, c.customer_type_id, c.customer_type_desc, c.customer_status_code, c.customer_status_name, c.customer_status_desc, c.customer_status_date, c.geo_code, c.in_city_limit_ind, c.timezone_name, c.latitude, c.longitude, c.address_line1_desc, c.address_line2_desc, c.address_line3_desc, c.address_line4_desc, c.city_name, c.county_name, c.postal_code, c.state_province_code, c.state_province_name, c.country_code, c.country_name, c.email_domain_desc, c.email_address_desc, c.phone_country_code, c.phone_number, c.phone_extension_number, c.sold_to_ind, c.ship_to_ind, c.bill_to_ind, c.alt_customer_id, c.duns_number, c.parent_duns_number, c.ult_duns_number, c.last_name, c.add_date, c.first_name, c.since_date, c.birth_date, c.death_date, c.marital_status_cat, c.marital_status_date, c.gender_cat, c.customer_amt, c.income_qty, c.credit_rating_cat, c.credit_score_qty, c.phone_region_code, c.credit_rating_code, c.credit_rating_name, c.customer_type_code, c.customer_type_name, c.customer_group_code, c.customer_group_name, c.customer_group_desc, c.customer_class_code, c.customer_class_name, c.customer_class_desc, \
--c.parent_customer_id, c.parent_customer_name, c.level_number, \
c.credit_status_code, c.credit_status_name, c.credit_status_desc, c.credit_status_date, c.guaranteed_cpc_amt, \
        c.hosted_client_sk, d.dw_start_date, c.dw_load_date, 'UPDATE' as dml_type\
        from stage_customer_changes c --stream\
        join dimension_customer d \
        on c.customer_id = d.customer_id \
        and d.customer_name = c.customer_name\
        and c.dw_soft_delete_ind = 'N' --excludes soft delete updates (processed in delete section)\
        where c.metadata$action = 'INSERT'\
        and c.metadata$isupdate = 'TRUE'\
                                ))\
--END NON-SCD2 UPDATES\
union\
-- This subquery figures out what to do when data is deleted from the stage_customer table (hard or soft)\
-- A deletion from the stage_customer table results in an update to the dimension_customer table\
select customer_sk, customer_id, customer_setid, customer_name, source_system_sk, \
currency_id, do_not_contact_ind, do_not_email_ind, do_not_mail_ind, do_not_call_ind, customer_type_id, customer_type_desc, customer_status_code, customer_status_name, customer_status_desc, customer_status_date, geo_code, in_city_limit_ind, timezone_name, latitude, longitude, address_line1_desc, address_line2_desc, address_line3_desc, address_line4_desc, city_name, county_name, postal_code, state_province_code, state_province_name, country_code, country_name, email_domain_desc, email_address_desc, phone_country_code, phone_number, phone_extension_number, sold_to_ind, ship_to_ind, bill_to_ind, alt_customer_id, duns_number, parent_duns_number, ult_duns_number, last_name, add_date, first_name, since_date, birth_date, death_date, marital_status_cat, marital_status_date, gender_cat, customer_amt, income_qty, credit_rating_cat, credit_score_qty, phone_region_code, credit_rating_code, credit_rating_name, customer_type_code, customer_type_name, customer_group_code, customer_group_name, customer_group_desc, customer_class_code, customer_class_name, customer_class_desc, \
--parent_customer_id, parent_customer_name, level_number, \
credit_status_code, credit_status_name, credit_status_desc, credit_status_date, guaranteed_cpc_amt,\
hosted_client_sk, dw_start_date, dw_stop_date, dw_current_ind, dml_type \
from (\
/* Most of the columns could have been listed as null, e.g., do_not_mail_ind as null */\
select nh.customer_sk, nms.customer_id, nms.customer_setid, nms.customer_name, nms.source_system_id as source_system_sk, \
nms.currency_id, nms.do_not_contact_ind, nms.do_not_email_ind, nms.do_not_mail_ind, nms.do_not_call_ind, nms.customer_type_id, nms.customer_type_desc, nms.customer_status_code, nms.customer_status_name, nms.customer_status_desc, nms.customer_status_date, nms.geo_code, nms.in_city_limit_ind, nms.timezone_name, nms.latitude, nms.longitude, nms.address_line1_desc, nms.address_line2_desc, nms.address_line3_desc, nms.address_line4_desc, nms.city_name, nms.county_name, nms.postal_code, nms.state_province_code, nms.state_province_name, nms.country_code, nms.country_name, nms.email_domain_desc, nms.email_address_desc, nms.phone_country_code, nms.phone_number, nms.phone_extension_number, nms.sold_to_ind, nms.ship_to_ind, nms.bill_to_ind, nms.alt_customer_id, nms.duns_number, nms.parent_duns_number, nms.ult_duns_number, nms.last_name, nms.add_date, nms.first_name, nms.since_date, nms.birth_date, nms.death_date, nms.marital_status_cat, nms.marital_status_date, nms.gender_cat, nms.customer_amt, nms.income_qty, nms.credit_rating_cat, nms.credit_score_qty, nms.phone_region_code, nms.credit_rating_code, nms.credit_rating_name, nms.customer_type_code, nms.customer_type_name, nms.customer_group_code, nms.customer_group_name, nms.customer_group_desc, nms.customer_class_code, nms.customer_class_name, nms.customer_class_desc, \
--parent_customer_id, parent_customer_name, level_number, \
nms.credit_status_code, nms.credit_status_name, nms.credit_status_desc, nms.credit_status_date, nms.guaranteed_cpc_amt,\
nms.hosted_client_sk, nh.dw_start_date, current_timestamp()::timestamp_ntz as dw_stop_date, null as dw_current_ind, 'D' as dml_type\
from dimension_customer nh\
inner join stage_customer_changes nms\
on nh.customer_id = nms.customer_id\
where ((nms.metadata$action = 'DELETE' and nms.metadata$isupdate = 'FALSE') OR (nms.metadata$action = 'INSERT' AND nms.dw_soft_delete_ind = 'Y'))\
and nh.dw_current_ind = 'Y'\
order by nms.dw_load_date);\
--END VIEW DDL\
\
\
\
create or replace task populate_dimension_customer warehouse = mdw_wh schedule = '1 minute' when system$stream_has_data('stage_customer_changes')\
as \
--START MERGE\
merge into dimension_customer nh --Target table to merge changes from STAGE_customer into\
using customer_change_data m --view\
-- The customer_change_data view holds the logic that determines what to insert/update into the DIMENSION_customer table.\
   on nh.customer_id = m.customer_id \
   -- and nh.source_system_sk = m.source_system_sk\
   -- customer_id & source_system_sk columns determine if there is a unique record in the DIMENSION_customer table\
   and nh.dw_start_date = m.dw_start_date\
   and nh.dw_current_ind = 'Y' --only update current rows (needed?)\
when matched and m.dml_type = 'U' --SCD2 "Update"\
then update -- Indicates the original record has been updated and is no longer current and the end_time needs to be stamped\
    set nh.dw_stop_date = m.dw_stop_date,\
        nh.dw_current_ind = 'N'    \
when matched and m.dml_type = 'D' \
then update -- Deletes are essentially logical deletes. The record is stamped and no newer version is inserted\
    set nh.dw_stop_date = m.dw_stop_date,\
        nh.dw_current_ind = 'N'\
--New for non-SCD2 UPDATE\
when matched and m.dml_type = 'UPDATE' and nh.dw_current_ind = 'Y'\
then update\
set nh.hosted_client_sk = m.hosted_client_sk,\
nh.currency_id = m.currency_id, \
nh.do_not_contact_ind = m.do_not_contact_ind, \
nh.do_not_email_ind = m.do_not_email_ind, \
nh.do_not_mail_ind = m.do_not_mail_ind, \
nh.do_not_call_ind = m.do_not_call_ind, \
nh.customer_type_id = m.customer_type_id, \
nh.customer_type_desc = m.customer_type_desc, \
nh.customer_status_code = m.customer_status_code, \
nh.customer_status_name = m.customer_status_name, \
nh.customer_status_desc = m.customer_status_desc, \
nh.customer_status_date = m.customer_status_date, \
nh.geo_code = m.geo_code, \
nh.in_city_limit_ind = m.in_city_limit_ind, \
nh.timezone_name = m.timezone_name, \
nh.latitude = m.latitude, \
nh.longitude = m.longitude, \
nh.address_line1_desc = m.address_line1_desc, \
nh.address_line2_desc = m.address_line2_desc, \
nh.address_line3_desc = m.address_line3_desc, \
nh.address_line4_desc = m.address_line4_desc, \
nh.city_name = m.city_name, \
nh.county_name = m.county_name, \
nh.postal_code = m.postal_code, \
nh.state_province_code = m.state_province_code, \
nh.state_province_name = m.state_province_name, \
nh.country_code = m.country_code, \
nh.country_name = m.country_name, \
nh.email_domain_desc = m.email_domain_desc, \
nh.email_address_desc = m.email_address_desc, \
nh.phone_country_code = m.phone_country_code, \
nh.phone_number = m.phone_number, \
nh.phone_extension_number = m.phone_extension_number, \
nh.sold_to_ind = m.sold_to_ind, \
nh.ship_to_ind = m.ship_to_ind, \
nh.bill_to_ind = m.bill_to_ind, \
nh.alt_customer_id = m.alt_customer_id, \
nh.duns_number = m.duns_number, \
nh.parent_duns_number = m.parent_duns_number, \
nh.ult_duns_number = m.ult_duns_number, \
nh.last_name = m.last_name, \
nh.add_date = m.add_date, \
nh.first_name = m.first_name, \
nh.since_date = m.since_date, \
nh.birth_date = m.birth_date, \
nh.death_date = m.death_date, \
nh.marital_status_cat = m.marital_status_cat, \
nh.marital_status_date = m.marital_status_date, \
nh.gender_cat = m.gender_cat, \
nh.customer_amt = m.customer_amt, \
nh.income_qty = m.income_qty, \
nh.credit_rating_cat = m.credit_rating_cat, \
nh.credit_score_qty = m.credit_score_qty, \
nh.phone_region_code = m.phone_region_code, \
nh.credit_rating_code = m.credit_rating_code, \
nh.credit_rating_name = m.credit_rating_name, \
nh.customer_type_code = m.customer_type_code, \
nh.customer_type_name = m.customer_type_name, \
nh.customer_group_code = m.customer_group_code, \
nh.customer_group_name = m.customer_group_name, \
nh.customer_group_desc = m.customer_group_desc, \
nh.customer_class_code = m.customer_class_code, \
nh.customer_class_name = m.customer_class_name, \
nh.customer_class_desc = m.customer_class_desc,\
nh.credit_status_code = m.credit_status_code, \
nh.credit_status_name = m.credit_status_name, \
nh.credit_status_desc = m.credit_status_desc, \
nh.credit_status_date = m.credit_status_date, \
nh.guaranteed_cpc_amt = m.guaranteed_cpc_amt,\
nh.dw_load_date = current_timestamp()\
--End UPDATE\
when not matched and m.dml_type = 'I' then insert -- Inserting a new customer_id and updating an existing one both result in an insert\
(customer_sk, customer_id, customer_setid, customer_name, source_system_sk, \
currency_id, do_not_contact_ind, do_not_email_ind, do_not_mail_ind, do_not_call_ind, customer_type_id, customer_type_desc, customer_status_code, customer_status_name, customer_status_desc, customer_status_date, geo_code, in_city_limit_ind, timezone_name, latitude, longitude, address_line1_desc, address_line2_desc, address_line3_desc, address_line4_desc, city_name, county_name, postal_code, state_province_code, state_province_name, country_code, country_name, email_domain_desc, email_address_desc, phone_country_code, phone_number, phone_extension_number, sold_to_ind, ship_to_ind, bill_to_ind, alt_customer_id, duns_number, parent_duns_number, ult_duns_number, last_name, add_date, first_name, since_date, birth_date, death_date, marital_status_cat, marital_status_date, gender_cat, customer_amt, income_qty, credit_rating_cat, credit_score_qty, phone_region_code, credit_rating_code, credit_rating_name, customer_type_code, customer_type_name, customer_group_code, customer_group_name, customer_group_desc, customer_class_code, customer_class_name, customer_class_desc, \
--parent_customer_id, parent_customer_name, level_number, \
credit_status_code, credit_status_name, credit_status_desc, credit_status_date, guaranteed_cpc_amt,\
hosted_client_sk, dw_start_date, dw_stop_date, dw_current_ind)\
values (SEQ_customer.nextval, m.customer_id,\
m.customer_setid, m.customer_name, m.source_system_sk, \
currency_id, do_not_contact_ind, do_not_email_ind, do_not_mail_ind, do_not_call_ind, customer_type_id, customer_type_desc, customer_status_code, customer_status_name, customer_status_desc, customer_status_date, geo_code, in_city_limit_ind, timezone_name, latitude, longitude, address_line1_desc, address_line2_desc, address_line3_desc, address_line4_desc, city_name, county_name, postal_code, state_province_code, state_province_name, country_code, country_name, email_domain_desc, email_address_desc, phone_country_code, phone_number, phone_extension_number, sold_to_ind, ship_to_ind, bill_to_ind, alt_customer_id, duns_number, parent_duns_number, ult_duns_number, last_name, add_date, first_name, since_date, birth_date, death_date, marital_status_cat, marital_status_date, gender_cat, customer_amt, income_qty, credit_rating_cat, credit_score_qty, phone_region_code, credit_rating_code, credit_rating_name, customer_type_code, customer_type_name, customer_group_code, customer_group_name, customer_group_desc, customer_class_code, customer_class_name, customer_class_desc, \
--parent_customer_id, parent_customer_name, level_number, \
credit_status_code, credit_status_name, credit_status_desc, credit_status_date, guaranteed_cpc_amt,\
m.hosted_client_sk, m.dw_start_date, m.dw_stop_date, m.dw_current_ind);\
-- END MERGE\
\
-- Resume the task\
alter task populate_dimension_customer suspend;\
alter task populate_dimension_customer resume;\
show tasks;}