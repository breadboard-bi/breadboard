<?xml version="1.0" encoding="UTF-8"?>
<transformation>
  <info>
    <name>DIMENSION_WEB_SITE_REFERER</name>
    <description/>
    <extended_description/>
    <trans_version/>
    <trans_status>0</trans_status>
    <directory>&#47;</directory>
    <log>
      <read/>
      <write/>
      <input/>
      <output/>
      <update/>
      <rejected/>
      <connection>mdw_mysql</connection>
      <table>ADMIN_TRANSFORMATION_CONTROL</table>
      <use_batchid>Y</use_batchid>
      <use_logfield>Y</use_logfield>
    </log>
    <maxdate>
      <connection/>
      <table/>
      <field/>
      <offset>0.0</offset>
      <maxdiff>0.0</maxdiff>
    </maxdate>
    <size_rowset>350</size_rowset>
    <sleep_time_empty>1</sleep_time_empty>
    <sleep_time_full>1</sleep_time_full>
    <unique_connections>N</unique_connections>
    <feedback_shown>Y</feedback_shown>
    <feedback_size>5000</feedback_size>
    <using_thread_priorities>Y</using_thread_priorities>
    <shared_objects_file/>
    <dependencies>
    </dependencies>
    <partitionschemas>
    </partitionschemas>
    <slaveservers>
    </slaveservers>
    <clusterschemas>
    </clusterschemas>
  <modified_user/>
  <modified_date>2007&#47;06&#47;09 09:27:48.877</modified_date>
  </info>
  <notepads>
    <notepad>
      <note>Breadboard BI - Customer 360 - Dimension Web Site Referer Data Flow - Version 1.1
===================================================
1.  This data flow extracts web site referer information from the staging area.

2.  As delivered, this loads as a slowly changing dimension Type 1 (SCD1).  Add SCD2 Functionality by 
    editing the settings in the dimension lookup&#47;update step.</note>
      <xloc>6</xloc>
      <yloc>9</yloc>
      <width>501</width>
      <heigth>88</heigth>
    </notepad>
    <notepad>
      <note>Customer Change Log
=============
&lt;Add Your Changes Here.  This will assist you in upgrading to future versions of Breadboard BI Solution Slices.  
Be sure to submit bug fix and enhancement requests to Breadboard BI - submit@breadboardbi.com.&gt;</note>
      <xloc>8</xloc>
      <yloc>309</yloc>
      <width>546</width>
      <heigth>62</heigth>
    </notepad>
    <notepad>
      <note>Copyright Â© 2007 Breadboard BI, LLC.  All rights reserved. 

This component is free software; you can redistribute it and&#47;or modify it under the terms of the GNU General Public License
 as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

It is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of 
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with this data mart; if not, write to the Free Software
Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA</note>
      <xloc>8</xloc>
      <yloc>392</yloc>
      <width>621</width>
      <heigth>140</heigth>
    </notepad>
  </notepads>
  <connection>
    <name>mdw_mysql</name>
    <server/>
    <type>MYSQL</type>
    <access>JNDI</access>
    <database>mdw_mysql</database>
    <port>-1</port>
    <username/>
    <password>Encrypted </password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute><code>IS_CLUSTERED</code><attribute>N</attribute></attribute>
      <attribute><code>MAXIMUM_POOL_SIZE</code><attribute>10</attribute></attribute>
      <attribute><code>QUOTE_ALL_FIELDS</code><attribute>N</attribute></attribute>
      <attribute><code>STREAM_RESULTS</code><attribute>Y</attribute></attribute>
      <attribute><code>USE_POOLING</code><attribute>N</attribute></attribute>
    </attributes>
  </connection>
  <order>
  <hop> <from>SORT_REFERERS</from><to>REMOVE_DUPLICATE_REFERERS</to><enabled>Y</enabled> </hop>  <hop> <from>REMOVE_DUPLICATE_REFERERS</from><to>DIMENSION_WEB_SITE_REFERER</to><enabled>Y</enabled> </hop>  <hop> <from>STAGE_WEB_REQUEST</from><to>PARSE_REFERER</to><enabled>Y</enabled> </hop>  <hop> <from>PARSE_REFERER</from><to>SORT_REFERERS</to><enabled>Y</enabled> </hop>  </order>
  <step>
    <name>DIMENSION_WEB_SITE_REFERER</name>
    <type>DimensionLookup</type>
    <description>This dimension lookup&#47;update step inserts or updates rows according to a slowly changing dimension Type 1 (SCD1) or slowly changing dimension Type 2 (SCD2) strategy.  The default configuration is SCD1. </description>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <field_name/>
           <schema_name/>
           </partitioning>
      <schema/>
      <table>DIMENSION_WEB_SITE_REFERER</table>
      <connection>mdw_mysql</connection>
      <commit>0</commit>
      <update>Y</update>
      <fields>
        <key>
          <name>REFERER_URL_DESC</name>
          <lookup>REFERER_URL_DESC</lookup>
        </key>
        <date>
          <name/>
          <from>DW_START_DATE</from>
          <to>DW_STOP_DATE</to>
        </date>
        <field>
          <name>REFERER_DESC</name>
          <lookup>REFERER_DESC</lookup>
          <update>Update</update>
        </field>
        <field>
          <name>EXTERNAL_IND</name>
          <lookup>EXTERNAL_IND</lookup>
          <update>Update</update>
        </field>
        <field>
          <name>PARENT_REFERER_DESC</name>
          <lookup>PARENT_REFERER_DESC</lookup>
          <update>Update</update>
        </field>
        <return>
          <name>REFERER_URL_SK</name>
          <rename/>
          <creation_method>tablemax</creation_method>
          <use_autoinc>N</use_autoinc>
          <version>DW_VERSION_NUMBER</version>
        </return>
      </fields>
      <sequence/>
      <min_year>1971</min_year>
      <max_year>2036</max_year>
      <cache_size>-1</cache_size>
     <cluster_schema/>
    <GUI>
      <xloc>659</xloc>
      <yloc>228</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>PARSE_REFERER</name>
    <type>ScriptValue</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <field_name/>
           <schema_name/>
           </partitioning>
    <script>var v_REFERER_URL_DESC = &quot;&quot;;
var PARENT_REFERER_DESC = &quot;&quot;;
var REFERER_DESC = &quot;&quot;;
var REFERER_DOMAIN_DESC;

if (REFERER_URL_DESC.trim().isNull())
{
v_REFERER_URL_DESC = &quot;Missing&quot;;
PARENT_REFERER_DESC = &quot;Missing&quot;;
REFERER_DESC = &quot;Missing&quot;;
REFERER_DOMAIN_DESC = &quot;Missing&quot;;
REFERER_URL_DESC = &quot;Missing&quot;;
} 

else {
var v_temp_referer_url_desc = &quot; &quot;+REFERER_URL_DESC;

&#47;&#47; Define REFERRER_DESC
var first_result = v_temp_referer_url_desc.replace( &#47;www.&#47;g,&quot;&quot;);
var first_pieces = first_result.split(&quot;&#47;&quot;);
var v_content_string = &quot;&quot;+first_pieces[2];
REFERER_DESC = &quot;&quot;+first_pieces[2];

&#47;&#47; Define PARENT_REFERER_DESC
if (REFERER_DESC.indexOf(&quot;oogle&quot;) &gt;= 0 || REFERER_DESC.indexOf(&quot;gclid=&quot;) &gt;= 0)
{PARENT_REFERER_DESC = &quot;google&quot;;}
else if (REFERER_DESC.indexOf(&quot;.yahoo.&quot;) &gt;= 0 || REFERER_DESC.indexOf(&quot;ypn-js.overture&quot;) &gt;= 0 || REFERER_DESC.indexOf(&quot;OVKEY=&quot;) &gt;= 0)
{PARENT_REFERER_DESC = &quot;yahoo&quot;;}
else if (REFERER_DESC.indexOf(&quot;.msn.&quot;) &gt;= 0)
{PARENT_REFERER_DESC = &quot;msn&quot;;}
else if (REFERER_DESC.indexOf(&quot;breadboardbi&quot;) &gt;= 0 || REFERER_DESC.indexOf(&quot;192.168.0&quot;) &gt;= 0)
{PARENT_REFERER_DESC = &quot;breadboardbi.com&quot;;}
else {PARENT_REFERER_DESC = REFERER_DESC;}

&#47;&#47; Extract Intelligence from REFERER_DESC
&#47;&#47; Google Syndication + parsing logic
if (v_content_string.indexOf(&quot;googlesyndication&quot;) &gt;= 0 || v_content_string.indexOf(&quot;ypn-js.overture&quot;) &gt;= 0)
{
var result = v_content_string.replace( &#47;%3A&#47;g,&quot;:&quot;).replace( &#47;%2F&#47;g,&quot;&#47;&quot;).replace( &#47;%25&#47;g,&quot;%&quot;).replace( &#47;%26&#47;g,&quot;&amp;&quot;).replace( &#47;%3D&#47;g,&quot;=&quot;).replace( &#47;%3F&#47;g,&quot;?&quot;).replace( &#47;%2B&#47;g,&quot;+&quot;).replace( &#47;%2C&#47;g,&quot;,&quot;).replace( &#47;%2D&#47;g,&quot;-&quot;).replace( &#47;%2E&#47;g,&quot;.&quot;).replace( &#47;%27&#47;g,&quot;`&quot;).replace( &#47;%28&#47;g,&quot;(&quot;).replace( &#47;%29&#47;g,&quot;)&quot;).replace( &#47;%40&#47;g,&quot;@&quot;).replace( &#47;%7C&#47;g,&quot;|&quot;).replace( &#47;%20&#47;g,&quot;_&quot;);
var pieces = result.split(&quot;&amp;&quot;);
var v_part1_str = &quot;&quot;+pieces[0];
var v_part2_str = &quot;&quot;+pieces[1];
var v_part3_str = &quot;&quot;+pieces[2];
var v_part4_str = &quot;&quot;+pieces[3];
var v_part5_str = &quot;&quot;+pieces[4];
var v_part6_str = &quot;&quot;+pieces[5];
var v_part7_str = &quot;&quot;+pieces[6];
var v_part8_str = &quot;&quot;+pieces[7];
var v_part9_str = &quot;&quot;+pieces[8];
var v_part10_str = &quot;&quot;+pieces[9];
var v_part11_str = &quot;&quot;+pieces[10];
var v_part12_str = &quot;&quot;+pieces[11];
var v_part13_str = &quot;&quot;+pieces[12];
var v_part14_str = &quot;&quot;+pieces[13];
var v_part15_str = &quot;&quot;+pieces[14];
&#47;&#47; add more pieces as needed

&#47;&#47; Google Parse
if (v_part1_str.indexOf(&quot;url=&quot;) == 0 &amp;&amp; v_content_string.indexOf(&quot;googlesyndication&quot;) &gt;= 0)
{ 
v_REFERER_URL_DESC = v_part1_str.substr(4);
}

else if (v_part2_str.indexOf(&quot;url=&quot;) == 0 &amp;&amp; v_content_string.indexOf(&quot;googlesyndication&quot;) &gt;= 0)
{ 
v_REFERER_URL_DESC = v_part2_str.substr(4);
}

else if (v_part3_str.indexOf(&quot;url=&quot;) == 0 &amp;&amp; v_content_string.indexOf(&quot;googlesyndication&quot;) &gt;= 0)
{ 
v_REFERER_URL_DESC = v_part3_str.substr(4);
}

else if (v_part4_str.indexOf(&quot;url=&quot;) == 0 &amp;&amp; v_content_string.indexOf(&quot;googlesyndication&quot;) &gt;= 0)
{ 
v_REFERER_URL_DESC = v_part4_str.substr(4);
}

else if (v_part5_str.indexOf(&quot;url=&quot;) == 0 &amp;&amp; v_content_string.indexOf(&quot;googlesyndication&quot;) &gt;= 0)
{ 
v_REFERER_URL_DESC = v_part5_str.substr(4);
}

else if (v_part6_str.indexOf(&quot;url=&quot;) == 0 &amp;&amp; v_content_string.indexOf(&quot;googlesyndication&quot;) &gt;= 0)
{ 
v_REFERER_URL_DESC = v_part6_str.substr(4);
}
else if (v_part7_str.indexOf(&quot;url=&quot;) == 0 &amp;&amp; v_content_string.indexOf(&quot;googlesyndication&quot;) &gt;= 0)
{ 
v_REFERER_URL_DESC = v_part7_str.substr(4);
}
else if (v_part8_str.indexOf(&quot;url=&quot;) == 0 &amp;&amp; v_content_string.indexOf(&quot;googlesyndication&quot;) &gt;= 0)
{ 
v_REFERER_URL_DESC = v_part8_str.substr(4);
}
else if (v_part9_str.indexOf(&quot;url=&quot;) == 0 &amp;&amp; v_content_string.indexOf(&quot;googlesyndication&quot;) &gt;= 0)
{ 
v_REFERER_URL_DESC = v_part9_str.substr(4);
}
else if (v_part10_str.indexOf(&quot;url=&quot;) == 0 &amp;&amp; v_content_string.indexOf(&quot;googlesyndication&quot;) &gt;= 0)
{ 
v_REFERER_URL_DESC = v_part10_str.substr(4);
}
else if (v_part11_str.indexOf(&quot;url=&quot;) == 0 &amp;&amp; v_content_string.indexOf(&quot;googlesyndication&quot;) &gt;= 0)
{ 
v_REFERER_URL_DESC = v_part11_str.substr(4);
}
else if (v_part12_str.indexOf(&quot;url=&quot;) == 0 &amp;&amp; v_content_string.indexOf(&quot;googlesyndication&quot;) &gt;= 0)
{ 
v_REFERER_URL_DESC = v_part12_str.substr(4);
}
else if (v_part13_str.indexOf(&quot;url=&quot;) == 0 &amp;&amp; v_content_string.indexOf(&quot;googlesyndication&quot;) &gt;= 0)
{ 
v_REFERER_URL_DESC = v_part13_str.substr(4);
}
else if (v_part14_str.indexOf(&quot;url=&quot;) == 0 &amp;&amp; v_content_string.indexOf(&quot;googlesyndication&quot;) &gt;= 0)
{ 
v_REFERER_URL_DESC = v_part14_str.substr(4);
}
else if (v_part15_str.indexOf(&quot;url=&quot;) == 0 &amp;&amp; v_content_string.indexOf(&quot;googlesyndication&quot;) &gt;= 0)
{ 
v_REFERER_URL_DESC = v_part15_str.substr(4);
}

&#47;&#47; Yahoo Parse
else if (v_part1_str.indexOf(&quot;refUrl=&quot;) == 0 &amp;&amp; v_content_string.indexOf(&quot;ypn-js.overture&quot;) &gt;= 0)
{ 
v_REFERER_URL_DESC = v_part1_str.substr(7);
}

else if (v_part2_str.indexOf(&quot;refUrl=&quot;) == 0 &amp;&amp; v_content_string.indexOf(&quot;ypn-js.overture&quot;) &gt;= 0)
{ 
v_REFERER_URL_DESC = v_part2_str.substr(7);
}

else if (v_part3_str.indexOf(&quot;refUrl=&quot;) == 0 &amp;&amp; v_content_string.indexOf(&quot;ypn-js.overture&quot;) &gt;= 0)
{ 
v_REFERER_URL_DESC = v_part3_str.substr(7);
}

else if (v_part4_str.indexOf(&quot;refUrl=&quot;) == 0 &amp;&amp; v_content_string.indexOf(&quot;ypn-js.overture&quot;) &gt;= 0)
{ 
v_REFERER_URL_DESC = v_part4_str.substr(7);
}

else if (v_part5_str.indexOf(&quot;refUrl=&quot;) == 0 &amp;&amp; v_content_string.indexOf(&quot;ypn-js.overture&quot;) &gt;= 0)
{ 
v_REFERER_URL_DESC = v_part5_str.substr(7);
}

else if (v_part6_str.indexOf(&quot;refUrl=&quot;) == 0 &amp;&amp; v_content_string.indexOf(&quot;ypn-js.overture&quot;) &gt;= 0)
{ 
v_REFERER_URL_DESC = v_part6_str.substr(7);
}
else if (v_part7_str.indexOf(&quot;refUrl=&quot;) == 0 &amp;&amp; v_content_string.indexOf(&quot;ypn-js.overture&quot;) &gt;= 0)
{ 
v_REFERER_URL_DESC = v_part7_str.substr(7);
}
else if (v_part8_str.indexOf(&quot;refUrl=&quot;) == 0 &amp;&amp; v_content_string.indexOf(&quot;ypn-js.overture&quot;) &gt;= 0)
{ 
v_REFERER_URL_DESC = v_part8_str.substr(7);
}
else if (v_part9_str.indexOf(&quot;refUrl=&quot;) == 0 &amp;&amp; v_content_string.indexOf(&quot;ypn-js.overture&quot;) &gt;= 0)
{ 
v_REFERER_URL_DESC = v_part9_str.substr(7);
}
else if (v_part10_str.indexOf(&quot;refUrl=&quot;) == 0 &amp;&amp; v_content_string.indexOf(&quot;ypn-js.overture&quot;) &gt;= 0)
{ 
v_REFERER_URL_DESC = v_part10_str.substr(7);
}
else if (v_part11_str.indexOf(&quot;refUrl=&quot;) == 0 &amp;&amp; v_content_string.indexOf(&quot;ypn-js.overture&quot;) &gt;= 0)
{ 
v_REFERER_URL_DESC = v_part11_str.substr(7);
}
else if (v_part12_str.indexOf(&quot;refUrl=&quot;) == 0 &amp;&amp; v_content_string.indexOf(&quot;ypn-js.overture&quot;) &gt;= 0)
{ 
v_REFERER_URL_DESC = v_part12_str.substr(7);
}
else if (v_part13_str.indexOf(&quot;refUrl=&quot;) == 0 &amp;&amp; v_content_string.indexOf(&quot;ypn-js.overture&quot;) &gt;= 0)
{ 
v_REFERER_URL_DESC = v_part13_str.substr(7);
}
else if (v_part14_str.indexOf(&quot;refUrl=&quot;) == 0 &amp;&amp; v_content_string.indexOf(&quot;ypn-js.overture&quot;) &gt;= 0)
{ 
v_REFERER_URL_DESC = v_part14_str.substr(7);
}
else if (v_part15_str.indexOf(&quot;refUrl=&quot;) == 0 &amp;&amp; v_content_string.indexOf(&quot;ypn-js.overture&quot;) &gt;= 0)
{ 
v_REFERER_URL_DESC = v_part15_str.substr(7);
}

else {v_REFERER_URL_DESC = result;}

v_REFERER_URL_DESC = v_REFERER_URL_DESC.replace( &#47;%26&#47;g,&quot;&amp;&quot;);

} &#47;&#47; END GOOGLE SYNDICATION LOGIC

&#47;&#47; assign non syndication value to variable
else {v_REFERER_URL_DESC = v_content_string;}

&#47;&#47;remove junk from referrer
if (v_REFERER_URL_DESC.indexOf(&quot;?&quot;) &gt;= 0)
{
v_question_position = v_REFERER_URL_DESC.indexOf(&quot;?&quot;);
v_REFERER_URL_DESC = v_REFERER_URL_DESC.substr(0,v_question_position);
}

&#47;&#47;Further parse, since syndication referrer URLs may be long.
var domain_result = v_REFERER_URL_DESC;

if (v_REFERER_URL_DESC.indexOf(&quot;&#47;&#47;&quot;) &gt;=0)
{
var domain_pieces = domain_result.split(&quot;&#47;&quot;);
REFERER_DOMAIN_DESC = &quot;&quot; + domain_pieces[2];

}
else
{
REFERER_DOMAIN_DESC = v_REFERER_URL_DESC;
}

}</script>
    <fields>      <field>        <name>v_REFERER_URL_DESC</name>
        <rename>v_REFERER_URL_DESC</rename>
        <type>String</type>
        <length>2000</length>
        <precision>-1</precision>
        </field>      <field>        <name>v_content_string</name>
        <rename>OLD_REFERER_URL_DESC</rename>
        <type>String</type>
        <length>2000</length>
        <precision>-1</precision>
        </field>      <field>        <name>REFERER_DOMAIN_DESC</name>
        <rename>REFERER_DOMAIN_DESC</rename>
        <type>String</type>
        <length>2000</length>
        <precision>-1</precision>
        </field>      <field>        <name>REFERER_DESC</name>
        <rename>REFERER_DESC</rename>
        <type>String</type>
        <length>2000</length>
        <precision>-1</precision>
        </field>      <field>        <name>PARENT_REFERER_DESC</name>
        <rename>PARENT_REFERER_DESC</rename>
        <type>String</type>
        <length>2000</length>
        <precision>-1</precision>
        </field>      </fields>     <cluster_schema/>
    <GUI>
      <xloc>195</xloc>
      <yloc>228</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>REMOVE_DUPLICATE_REFERERS</name>
    <type>Unique</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <field_name/>
           <schema_name/>
           </partitioning>
      <count_rows>N</count_rows>
      <count_field/>
    <fields>      <field>        <name>v_REFERER_URL_DESC</name>
        <case_insensitive>Y</case_insensitive>
        </field>      </fields>     <cluster_schema/>
    <GUI>
      <xloc>475</xloc>
      <yloc>230</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>SORT_REFERERS</name>
    <type>SortRows</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <field_name/>
           <schema_name/>
           </partitioning>
      <directory>%%java.io.tmpdir%%</directory>
      <prefix>out</prefix>
      <sort_size>5000</sort_size>
      <compress>N</compress>
    <fields>
      <field>
        <name>v_REFERER_URL_DESC</name>
        <ascending>Y</ascending>
        </field>
      </fields>
     <cluster_schema/>
    <GUI>
      <xloc>328</xloc>
      <yloc>227</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>STAGE_WEB_REQUEST</name>
    <type>TableInput</type>
    <description>This step extracts data from the Breadboard BI stage table.</description>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <field_name/>
           <schema_name/>
           </partitioning>
    <connection>mdw_mysql</connection>
    <sql>SELECT
(CASE WHEN (REFERER_URL_DESC LIKE &apos;http:&#47;&#47;www.breadboardbi.co%&apos; 
	OR REFERER_URL_DESC LIKE &apos;http:&#47;&#47;breadboardbi.co%&apos;
	OR REFERER_URL_DESC LIKE &apos;%92.168.0.10%&apos; 
	OR REFERER_URL_DESC LIKE &apos;http:&#47;&#47;breadboardbi.dnsalias%&apos; 
	OR REFERER_URL_DESC LIKE &apos;%192.168.0.10%&apos;) AND NOT (REFERER_URL_DESC LIKE &apos;%OVKEY=%&apos; OR REFERER_URL_DESC LIKE &apos;%gclid=%&apos;)
      THEN &apos;N&apos; ELSE &apos;Y&apos; END) AS EXTERNAL_IND,     
REFERER_URL_DESC
FROM STAGE_WEB_REQUEST
WHERE REFERER_URL_DESC &lt;&gt; &apos;Missing&apos; AND REFERER_URL_DESC IS NOT NULL
GROUP BY HOSTED_CLIENT_SK,REFERER_URL_DESC</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>N</variables_active>
     <cluster_schema/>
    <GUI>
      <xloc>41</xloc>
      <yloc>228</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step_error_handling>
  </step_error_handling>
</transformation>
